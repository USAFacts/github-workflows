name: main
on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      GIT_TOKEN:
        required: true
    inputs:
      cleanCheckout:
        description: "Whether to prefer a clean checkout (debug purposes)"
        default: false
        required: false
        type: boolean
      skipTests:
        description: "Whether to skip tests. (default false)"
        default: false
        required: false
        type: boolean
env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
jobs:
  test:
    runs-on: [self-hosted, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          clean: ${{inputs.cleanCheckout}}
          token: ${{secrets.GIT_TOKEN}}
      - name: Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install
        run: npm install --legacy-peer-deps
      - name: Test
        if: ${{ !inputs.skipTests }}
        id: test
        run: npm run test
      - name: Build
        id: build
        run: npm run build
      - name: Version
        run: |
          git tag -d $(git tag -l)
          git fetch --all --prune
          git config --global user.email "pipeline@usafacts.org"
          git config --global user.name "Github Pipeline"
          npm version patch -m "ci(build): Bump package from $(npm info . version) to %s [skip ci]" --force
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: VersionSave
        id: versionsave
        run: |
          git reset --hard
          git clean -f -d
          git push --follow-tags --force
  version:
    runs-on: [self-hosted, frontend]
    needs: [test]
    outputs:
      value: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          clean: ${{inputs.cleanCheckout}}
          token: ${{secrets.GIT_TOKEN}}
      - name: Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - id: version
        run: echo "::set-output name=value::$(npm info . version)"
  npm:
    runs-on: [self-hosted, frontend]
    needs: [version]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          clean: ${{inputs.cleanCheckout}}
          token: ${{secrets.GIT_TOKEN}}
      - name: NPM
        run: npm publish
  publish-release:
    runs-on: [self-hosted, frontend]
    needs: [npm]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          clean: false
          token: ${{secrets.GIT_TOKEN}}
      - name: Release
        uses: actions/github-script@v5.0.0
        with:
          script: |
            await github.rest.repos.createRelease({
              ...context.repo,
              tag_name: '${{ needs.version.outputs.value }}',
              name: 'V${{ needs.version.outputs.value }}',
              generate_release_notes: true
            });
      - name: Storybook
        continue-on-error: true
        run: |
          npm run build-storybook
          usafacts azsync --source "${GITHUB_WORKSPACE}/storybook-static" --container "storybook/${GITHUB_REPOSITORY#*/}"
